generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://127.0.0.1:65535/omm-ws2223"
}

type UsersTemplates {
  id     String @map("_id") @db.ObjectId
  name   String
  origin String
  base64 String
}

enum Visibility {
  PUBLIC
  UNLISTED
  PRIVATE
}

model Draft {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  timestamp        DateTime @default(now())
  name             String
  serializedCanvas String
  width            Int
  height           Int
  userId           String   @db.ObjectId
  user             User     @relation(fields: [userId], references: [id])
}

model Meme {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  base64      String
  title       String     @default("")
  timestamp   DateTime   @default(now())
  userId      String     @db.ObjectId
  user        User       @relation(fields: [userId], references: [id])
  upvotes     Int        @default(0)
  downvotes   Int        @default(0)
  Comment     Comment[]
  description String     @default("")
  visibility  Visibility @default(PUBLIC)
  usertexts   String     @default("")
  
}


model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  timestamp DateTime @default(now())
  text      String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  memeId    String?  @db.ObjectId
  meme      Meme?    @relation(fields: [memeId], references: [id])
}

model Template {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  image String
  name  String
  type  String
}

model User {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  username  String           @unique
  password  String?
  email     String           @unique
  templates UsersTemplates[]
  memes     Meme[]
  comment   Comment[]
  votes     Vote[]
  drafts    Draft[]
}

type Vote {
  memeId String  @db.ObjectId
  upvote Boolean
}
